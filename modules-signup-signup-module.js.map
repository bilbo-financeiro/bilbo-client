{"version":3,"sources":["webpack:///./src/app/modules/signup/signup.component.html","webpack:///./src/app/modules/signup/signup.component.scss","webpack:///./src/app/modules/signup/signup.component.ts","webpack:///./src/app/modules/signup/signup.module.ts","webpack:///./src/app/modules/signup/signup.service.ts"],"names":[],"mappings":"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","file":"modules-signup-signup-module.js","sourcesContent":["module.exports = \"<form class=\\\"form-group\\\" [formGroup]=\\\"signupForm\\\">\\n  <div class=\\\"form-control\\\">\\n    <label>Primeiro Nome</label>\\n    <input type=\\\"text\\\" formControlName=\\\"firstName\\\">\\n  </div>\\n  <div class=\\\"form-control\\\">\\n    <label>Último Nome</label>\\n    <input type=\\\"text\\\" formControlName=\\\"lastName\\\">\\n  </div>\\n  <div class=\\\"form-control\\\">\\n    <label>Email</label>\\n    <input type=\\\"email\\\" formControlName=\\\"email\\\">\\n  </div>\\n  <div class=\\\"form-control\\\">\\n    <label>Usuário</label>\\n    <input type=\\\"text\\\" formControlName=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-control\\\">\\n    <label>Senha</label>\\n    <input type=\\\"text\\\" formControlName=\\\"password\\\">\\n  </div>\\n  <div class=\\\"form-control\\\">\\n    <label>Confirmação de Senha</label>\\n    <input type=\\\"text\\\" formControlName=\\\"confirmPassword\\\">\\n  </div>\\n\\n  <button (click)=\\\"createUser()\\\" [disabled]=\\\"signupForm.invalid\\\">Salvar</button>\\n\\n</form>\\n\\n\\n<pre>\\n  value: {{ signupForm.value | json }}\\n  valid: {{ signupForm.valid | json }}\\n</pre>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { SignupService } from './signup.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  public signupForm: FormGroup;\n\n  constructor(\n    private signupSerivce: SignupService\n  ) { }\n\n  ngOnInit() {\n    this.initSignupForm();\n  }\n\n  initSignupForm(): void {\n    this.signupForm = new FormGroup({\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl(''),\n    }, { validators: this.validateConfirmPassword });\n  }\n\n  validateConfirmPassword(formGroup: AbstractControl): ValidationErrors {\n    const password: AbstractControl = formGroup.get('password');\n    const confirmPassword: AbstractControl = formGroup.get('confirmPassword');\n\n    if (password.value && !confirmPassword.value) {\n      confirmPassword.setErrors({ required: true });\n      return { passwordError: true };\n    } else {\n      if (password.value === confirmPassword.value) {\n        return null;\n      } else {\n        confirmPassword.setErrors({ differentPasswordConfirmation: true });\n        return { passwordError: true };\n      }\n    }\n  }\n\n  createUser(): void {\n    const formValue = this.signupForm.value;\n\n    delete formValue.confirmPassword;\n\n    this.signupSerivce.insert(formValue);\n    console.log('ta osso');\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupService } from './signup.service';\n\nimport { SignupComponent } from './signup.component';\n\nconst ROUTES: Routes = [\n  { path: '', component: SignupComponent }\n];\n\n@NgModule({\n  declarations: [SignupComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(ROUTES)\n  ],\n  providers: [SignupService]\n})\nexport class SignupModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\nimport { map } from 'rxjs/operators';\n\nimport { User } from 'src/app/@core/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  constructor(\n    private db: AngularFireDatabase\n  ) { }\n\n  insert(user: User) {\n    this.db.list('user').push(user);\n  }\n\n  update(user: User, key: string) {\n    this.db.list('user').update(key, user);\n  }\n\n  getAll() {\n    return this.db.list('user')\n      .snapshotChanges()\n      .pipe(\n        map(changes => changes.map(c => ({ key: c.payload.key, ...c.payload.val() })))\n      );\n  }\n\n  delete(key: string) {\n    this.db.object(`user/${key}`).remove();\n  }\n\n}\n\n"],"sourceRoot":""}